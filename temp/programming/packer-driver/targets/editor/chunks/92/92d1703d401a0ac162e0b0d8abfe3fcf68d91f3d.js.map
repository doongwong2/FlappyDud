{"version":3,"sources":["file:///C:/Users/User/Desktop/programs/FlappyDud/assets/Scripts/GameCtrl.ts"],"names":["_decorator","Component","Node","CCInteger","director","Contact2DType","Collider2D","Ground","Results","Bird","PipePool","BirdAudio","ccclass","property","GameCtrl","type","tooltip","isOver","onLoad","initListener","result","resetScore","pause","node","on","EventType","TOUCH_START","resetGame","bird","resetBird","startGame","fly","clip","onAudioQueue","hideResults","resume","gameOver","showResults","pipeQueue","reset","passPipe","addScore","createPipe","addPool","contactGroundPipe","collider","getComponent","BEGIN_CONTACT","onBeginContact","selfCollider","otherCollider","contact","hitSomething","birdStruck","update"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node , CCInteger, input, Input, EventKeyboard, KeyCode, director, Contact2DType, Collider2D, IPhysics2DContact} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nimport { Ground } from './Ground';\r\nimport { Results } from './Results';\r\nimport { Bird } from './Bird';\r\nimport { PipePool } from './PipePool';\r\nimport { BirdAudio} from './BirdAudio';\r\n\r\n@ccclass('GameCtrl')\r\nexport class GameCtrl extends Component {\r\n\r\n    @property({\r\n        type: Ground,\r\n        tooltip: 'this is ground'\r\n    })\r\n    public ground: Ground\r\n\r\n    @property({\r\n        type: Results,\r\n        tooltip:'results here'\r\n    })\r\n    public result: Results\r\n\r\n    @property({\r\n        type: Bird,\r\n        tooltip:'bird here'\r\n    })\r\n    public bird: Bird\r\n\r\n    @property({\r\n        type: PipePool\r\n    })\r\n    public pipeQueue: PipePool;\r\n\r\n    @property({\r\n        type:BirdAudio\r\n    })\r\n    public clip: BirdAudio;\r\n\r\n    @property({\r\n        type: CCInteger\r\n    })\r\n    public speed: number = 300;\r\n\r\n    @property({\r\n        type: CCInteger\r\n    })\r\n    public pipeSpeed: number = 200;\r\n\r\n    public isOver : boolean;\r\n\r\n    onLoad(){\r\n        this.initListener();\r\n        this.result.resetScore();\r\n        this.isOver = true;\r\n        director.pause();\r\n    }\r\n\r\n    initListener(){\r\n        //input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this)\r\n\r\n        this.node.on(Node.EventType.TOUCH_START,() => {\r\n            if(this.isOver == true){\r\n                this.resetGame();\r\n                this.bird.resetBird();\r\n                this.startGame();\r\n            }\r\n\r\n            if(this.isOver == false){\r\n                this.bird.fly();\r\n                this.clip.onAudioQueue(0);\r\n            }\r\n        });\r\n    }\r\n\r\n    // onKeyDown(event: EventKeyboard){\r\n    //     switch(event.keyCode){\r\n    //         case KeyCode.KEY_A:\r\n    //             this.gameOver();\r\n    //             break;\r\n\r\n    //         case KeyCode.KEY_P:\r\n    //             this.result.addScore();\r\n    //             break;\r\n\r\n    //         case KeyCode.KEY_Q:\r\n    //             this.resetGame();\r\n    //             this.bird.resetBird();\r\n    //             break;\r\n    //     }\r\n    // }\r\n\r\n    startGame(){\r\n        this.result.hideResults();\r\n        director.resume();\r\n    }\r\n    \r\n    gameOver(){\r\n        this.result.showResults();\r\n        this.isOver = true;\r\n        this.clip.onAudioQueue(3);\r\n        director.pause();\r\n    }\r\n\r\n    resetGame(){\r\n        this.result.resetScore();\r\n        this.pipeQueue.reset();\r\n        this.isOver = false;\r\n        this.startGame();\r\n    }\r\n\r\n    passPipe(){\r\n        this.result.addScore();\r\n        this.clip.onAudioQueue(1);\r\n    }\r\n\r\n    createPipe(){\r\n        this.pipeQueue.addPool();\r\n    }\r\n\r\n    contactGroundPipe(){\r\n        let collider = this.bird.getComponent(Collider2D);\r\n\r\n        if(collider){\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        }\r\n    }\r\n\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null){\r\n        this.bird.hitSomething =true;\r\n        this.clip.onAudioQueue(2);\r\n    }\r\n\r\n    birdStruck(){\r\n        this.contactGroundPipe();\r\n        if(this.bird.hitSomething == true){\r\n            this.gameOver();\r\n        }\r\n    }\r\n\r\n    update(){\r\n        if(this.isOver == false){\r\n            this.birdStruck();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}