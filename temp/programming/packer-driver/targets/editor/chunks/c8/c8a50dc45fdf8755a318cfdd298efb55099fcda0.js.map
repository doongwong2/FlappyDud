{"version":3,"sources":["file:///C:/Users/User/Desktop/programs/FlappyDud/assets/Scripts/PipePool.ts"],"names":["_decorator","Component","Node","Prefab","NodePool","instantiate","ccclass","property","PipePool","type","pool","createPipe","initPool","initCount","i","prefabPipes","pipePoolHome","addChild","put","addPool","size","get","reset","removeAllChildren","clear"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAASC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,W,OAAAA,W;;;;;;;;;OACnD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;0BAKjBQ,Q,WADZF,OAAO,CAAC,UAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEN;AADA,OAAD,C,UAKRI,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEP;AADA,OAAD,C,2BAPb,MACaM,QADb,SAC8BP,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAW7BS,IAX6B,GAWtB,IAAIN,QAAJ,EAXsB;AAAA,eAY7BO,UAZ6B;AAAA;;AAcpCC,QAAAA,QAAQ,GAAE;AACN,cAAIC,SAAS,GAAG,CAAhB;;AAEA,eAAI,IAAIC,CAAC,GAAG,CAAZ,EAAcA,CAAC,GAAGD,SAAlB,EAA6BC,CAAC,EAA9B,EAAiC;AAC7B,iBAAKH,UAAL,GAAkBN,WAAW,CAAC,KAAKU,WAAN,CAA7B;;AAEA,gBAAGD,CAAC,IAAI,CAAR,EAAU;AACN,mBAAKE,YAAL,CAAkBC,QAAlB,CAA2B,KAAKN,UAAhC;AACH,aAFD,MAEO;AACH,mBAAKD,IAAL,CAAUQ,GAAV,CAAc,KAAKP,UAAnB;AACH;AACJ;AACJ;;AAEDQ,QAAAA,OAAO,GAAE;AACL,cAAG,KAAKT,IAAL,CAAUU,IAAV,KAAmB,CAAtB,EAAwB;AACpB,iBAAKT,UAAL,GAAkB,KAAKD,IAAL,CAAUW,GAAV,EAAlB;AACH,WAFD,MAEO;AACH,iBAAKV,UAAL,GAAkBN,WAAW,CAAC,KAAKU,WAAN,CAA7B;AACH;;AAED,eAAKC,YAAL,CAAkBC,QAAlB,CAA2B,KAAKN,UAAhC;AACH;;AAEDW,QAAAA,KAAK,GAAE;AACH,eAAKN,YAAL,CAAkBO,iBAAlB;AACA,eAAKb,IAAL,CAAUc,KAAV;AACA,eAAKZ,QAAL;AACH;;AA1CmC,O;;;;;iBAIf,I","sourcesContent":["import { _decorator, Component, Node ,Prefab , NodePool, instantiate} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nimport { Pipes } from './Pipes';\r\n\r\n@ccclass('PipePool')\r\nexport class PipePool extends Component {\r\n    @property({\r\n        type: Prefab\r\n    })\r\n    public prefabPipes = null;\r\n\r\n    @property({\r\n        type: Node\r\n    })\r\n    public pipePoolHome;\r\n\r\n    public pool = new NodePool;\r\n    public createPipe;\r\n\r\n    initPool(){\r\n        let initCount = 3;\r\n\r\n        for(let i = 0;i < initCount; i++){\r\n            this.createPipe = instantiate(this.prefabPipes);\r\n\r\n            if(i == 0){\r\n                this.pipePoolHome.addChild(this.createPipe);\r\n            } else {\r\n                this.pool.put(this.createPipe);\r\n            }\r\n        }\r\n    }\r\n\r\n    addPool(){\r\n        if(this.pool.size() > 0){\r\n            this.createPipe = this.pool.get();\r\n        } else {\r\n            this.createPipe = instantiate(this.prefabPipes);\r\n        }\r\n\r\n        this.pipePoolHome.addChild(this.createPipe);\r\n    }\r\n\r\n    reset(){\r\n        this.pipePoolHome.removeAllChildren();\r\n        this.pool.clear();\r\n        this.initPool();\r\n    }\r\n}\r\n\r\n\r\n"]}